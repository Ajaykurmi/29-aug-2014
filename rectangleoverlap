/*
Q.10 Given two rectangles, find if the given two rectangles overlap or not.
Note that a rectangle can be represented by two coordinates, top left and bottom right. So mainly we are given following four coordinates. l1: Top Left coordinate of first rectangle. r1: Bottom Right coordinate of first rectangle. l2: Top Left coordinate of second rectangle. r2: Bottom Right coordinate of second rectangle.

We need to write a function bool doOverlap(l1, r1, l2, r2) that returns true if the two given rectangles overlap.
*/
#include<iostream>
using namespace std;
struct Point
{
    int x, y;
};

class Rectangles {
	public: 
		Rectangles(){}
		~Rectangles(){}
		bool checkRectangleOverlap(Point l1, Point r1, Point l2, Point r2) {
			//( P2.y < P3.y || P1.y > P4.y || P2.x < P3.x || P1.x > P4.x )
			// If one rectangle is on left side of other
    		if (l1.x > r2.x || l2.x > r1.x)
        		return false;
 
    		// If one rectangle is above other
    		if (l1.y < r2.y || l2.y < r1.y)
        		return false;
 
    		return true;
		}
};

int main()
{
    Point l1 = {0, 10}, r1 = {10, 0};
    Point l2 = {5, 5}, r2 = {15, 0};
    Rectangles cro;
    if (cro.checkRectangleOverlap(l1, r1, l2, r2))
        printf("Rectangles Overlap");
    else
        printf("Rectangles Don't Overlap");
    return 0;
}
